#!/usr/bin/env bash
# ft:bash
#set -x 
# script to help with troubleshooting elasticsearch

news_cluster="elastic-client-prod-1.56m.vgtf.net"
sports_cluster="elastic-sports-client-1.56m.vgtf.net"

usage(){
  echo "Usage: ${0##*/} [options]"
  echo """
  -a      Get allocations
  -c      Cluster Name [Required]
  -d      Disk Available
  -h      Display this help message 
  -i      Display Index health
  -l      Get list of items that can be queried and are used by this script
  -m      Get the Master of the cluster
  -n      Get a list of nodes from the cluster
  -p      Get thread pool
  -q      Request whatever you want from anywhere in the cluster
  -s      Get the shards in the cluster
  -t      Get pending tasks from the cluster
  -v      Get the health of the cluster
  -w      Request what ever you want from the _cat section of the cluster [e.g. /nodes?help]
  -D      Delete a specific shard 
  -H      Get the Hot Threads [ALL|node id]
  -R      Get ongoing recovery tasks
  -S      Get cluster Stats
 """ 
}

get_req() {
  method=${1:-"GET"}
  case $cluster in 
    news)
      ping=$(ping -c 1 $news_cluster > /dev/null 2>&1 ; echo $?)
      if (( $ping == 0 )); then 
        curl -s -X$method "http://$news_cluster:9200$req"
      else
        echo "Node: $news_cluster appears to be down"
      fi
      ;;
    sports)
      ping=$(ping -c 1 $sports_cluster > /dev/null 2>&1 ; echo $?)
      if (( $ping == 0 )); then
        curl -s -X$method "http://$sports_cluster:9200$req"
      else
        echo "Node: $sports_cluster appears to be down"
      fi
      ;;
    *)
      curl -s -X$method "http://$cluster:9200$req"
      ;;
  esac
}



while getopts ":c:w:q:D:H:adinhtsvlmpHRS" opt; do
  case $opt in 
    a)
      req="/_cat/allocation?v"
      get_req $cluster $req | grep -ivE "logstash|client" 
      ;;
    i)
      req="/_cat/indices/log*?v"
      get_req "GET" $cluster $req
      ;;
    c)
      cluster=$OPTARG
      ;;
    d)
      req="/_cat/nodes?h=h,d"
      get_req $cluster $req | grep -iv logstash
      ;;  
    n)
      req="/_cat/nodes"
      get_req $cluster $req
      ;;
    t)
      req="/_cat/pending_tasks?v"
      get_req $cluster $req
      ;;
    h)
      usage
      ;;
    s)
      req="/_cat/shards"
      get_req $cluster $req
      ;;
    m)
      req="/_cat/master?v"
      get_req $cluster $req
      ;;
    p)
      req="/_cat/thread_pool?v"
      get_req $cluster $req | grep -iv logstash 
      ;;
    v)
      req="/_cat/health?v&ts=0"
      get_req $cluster $req
      ;;
    w)
      req="/_cat$OPTARG"
      get_req $cluster $req
      ;;
    q)
      req="$OPTARG"
      get_req $cluster $req
      ;;
    D)
      method="DELETE"
      req="/$OPTARG"
      get_req $method $cluster $req
      ;;
    H)
      if [[ $OPTARG = "ALL" ]]; then
        req="/_nodes/hot_threads"
        get_req $cluster $req
      else 
        req="/_nodes/$OPTARG/hot_threads"
        get_req $cluster $req
      fi
      ;;
    R)
      req="/_cat/recovery?v"
      get_req $cluster $req
      ;;
    S)
      req="/_stats"
      get_req $cluster $req | jq '.'
      ;;
    l)
      req="/_cat/?help"
      get_req $cluster $req
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      usage
      ;;
    :)
      echo "Option -$OPTARG requires and argument." >&2
      ;;
  esac
done
